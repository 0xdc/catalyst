This file is a rough list of changes that need to be made to catalyst.  If you
have questions about any of these items, or wish to help with development, send
them to the gentoo-catalyst@lists.gentoo.org mailing list.  Bug reports should
be filed at http://tinyurl.com/79slrk (http://bugs.gentoo.org) under the
Catalyst component.

Global:
- Remove spec_prefix from all exported variables
  - variables without spec_prefix are global and used in all targets
  - variables with spec_prefix only apply to that target
- add multiple target support for spec files
  - target: stage1
  - targets: stage1 stage2 stage3 stage4 livecd netboot
- add more validation and checking for code which affects both host and target
  - setup defaults if host isn't configured
  - allow configuration globally (catalyst.conf), per-spec, or per-target
  - ccache
    - check host settings (size, location, etc) and restore them when done
  - distcc
    - check host settings (distcc_hosts, etc) and restore them when done
  - icecream
    - check host settings (icecream_hosts, etc) and restore them when done
- add support for new portage features
  - Cache backends
    - metadata_overlay (portage default in 2.1.6)
	- sqlite
  - Jobs
  - Load Average
  - Dependency checking
    - Deep checking
	- Complete Graph
	- Build-time dependencies
  - USE changes
    - newuse versus changed-use
  - Failure detection
    - Add --keep-going support
- detect GCC version in seed stages for supported settings (CFLAGS)
- add statistics gathering/reporting
  - counter
    - sessions started/completed/failed
	- targets started/completed/failed (and per-subarch here, too)
	- sessions/targets run-time, CPU/RAM/disk usage (max and final)
  - guage
    - sessions/targets active
	- caching information
      - packages/stages/snapshots in respective caches
      - cache hit ratio/percent
	  - cache age
    - timing information
	  - currently-running jobs
	  - specific tasks
	    - dependency calculation
		- unpacking seeds
  - easily retrievable (text files? BDB? SQLite? configurable?) for SNMP, etc
- add option to perform update of the (in-cache) seed before processing target

Config:
- security
  - sign materials automatically
- logging
  - add logging support (partially done through use of catalyst.output.msg())
    - file-based
	- syslog
  - add notification capabilities
    - email
	- snmp trap
- seperate out options that control catalyst versus the package manager
  - options key should specify catalyst options
  - new keys for package managers
    - portage_features
	- pkgcore_features

Targets:
- add support for livedvd/liveusb
  - do we use livecd/type or something new
  - make livedvd type perform several actions automatically, if configured
    - auto-fetch distfiles
	- automatically pull stages
	  - local disk via absolute or relative path
	  - URI
- change user creation to be more flexible
  - stage4 and netboot support
- build boot software for targets on-demand
  - removes cdtar requirement
  - allows one to specify multiple bootloaders
    - boot/loader: grub elilo
	- netboot/boot/loader: pxelinux elilo
	- livecd/boot/loader: isolinux elilo
  - add ability to specify other "bootables" to build/install, like memtest86+
    - do we use a single spec key or multiple?
	  - single
	    - livecd/boot/image: memtest|/path/to/image (pre-built, label=memtest)
	    - livecd/boot/image: memtest86+ (use PM)
		- livecd/boot/image: memtest|build-memtest86+ (use PM, change label)
		- livecd/boot/image: memtest|auto (locate in cache, try build, and fail)
	  - multiple
	    - livecd/boot/labels: gentoo gentoo-nofb gentoo-nodetect memtest
	    - livecd/boot/image: gentoo gentoo gentoo memtest86 ("kernel" line)
		- livecd/boot/opts: default default default,nodetect none
	- do we also need a way to specify an initrd with this?
  - setup defaults for each arch
    - allow overrides/adds
	- verify usability on arch
- add variable support for spec files
  - automatic substitution
    - %DATESTAMP%
	- %BUILDDIR%
  - user-defined
    - %DISTRIBUTION%
	- %AUTHOR%
- add new targets
  - system (functionally equivalent to stages 1 through 3, produces "stage3")
  - world (stage4 work-a-like)
- merge livecd-stage1 and livecd-stage2 into livecd target
  - do we add targets for other live (LiveDVD, LiveUSB, LiveNet) media?
- add support for multiple userland images on a single media
  - 32-bit and 64-bit kernels/userlands
  - multiple arches/ABIs
  - normal and debug kernels/userlands
